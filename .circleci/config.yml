version: 2

aliases:
  - &docker
    - image: circleci/openjdk:8-jdk-node-browsers

  - &directory
      ~/project

  # SETUP aliases
  - &restore_yarn_cache
    restore_cache: # 1st step-type
      name: Restoring cache
      key: dependency-cache-{{ checksum "package.json" }}

  - &create_yarn_dependencies
    run: # 2nd step-type
      name: Installing dependencies
      command: yarn --frozen-lockfile

  - &save_yarn_cache
    save_cache: # 3rd step-type
      name: Saving cache
      key: dependency-cache-{{ checksum "package.json" }}
      paths:
        - ./node_modules

  # LINT aliases
  - &run_lint
    run:
      name: Running linter
      command: yarn run lint

  # TEST aliases
  - &run_tests
    run:
      name: Running tests
      command: yarn run test

  # BUILD aliases
  - &build
    run:
      name: Building project
      command: yarn run build

  # USER INFORMATION aliases
  - &config_user_information
    run:
      name: Configuring user information
      command: |
        git config user.email "fjgalianacano@gmail.com"
        git config user.name "frangaliana"

  # DEPLOY aliases
  - &deploy
    run:
      name: Deploying project
      command: yarn run deploy



jobs:
  setup: # ----- SETUP JOB -----
    docker: *docker
    working directory: *directory

    steps:
      - checkout
      - *restore_yarn_cache
      - *create_yarn_dependencies
      - *save_yarn_cache


  lint: # ----- LINT JOB -----
    docker: *docker
    working directory: *directory

    steps:
      - checkout
      - *restore_yarn_cache
      - *create_yarn_dependencies
      - *run_lint

  test: # ----- TEST JOB -----
    docker: *docker
    working directory: *directory

    steps:
      - checkout
      - *restore_yarn_cache
      - *create_yarn_dependencies
      - *run_tests

  build_and_deploy: # ----- DEPLOY JOB -----
    docker: *docker
    working directory: *directory

    steps:
      - checkout
      - *restore_yarn_cache
      - *create_yarn_dependencies
      - *config_user_information
      - *build
      - *deploy

workflows:
  version: 2
  stable:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - test:
          requires:
            - setup
      - build_and_deploy:
          requires:
            - lint
            - test

# Schedule deployment at 00:00 (mm:hh) for all days on master branch
# nightly:
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only:
#                - master
#
#    jobs:
#      - setup
#      - deploy:
#          requires:
#            - setup
