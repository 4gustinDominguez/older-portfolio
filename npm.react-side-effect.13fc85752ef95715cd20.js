(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{173:function(e,n,t){"use strict";function o(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var r=t(0),i=o(r),c=o(t(174));function p(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var u=!("undefined"==typeof window||!window.document||!window.document.createElement);e.exports=function(e,n,t){if("function"!=typeof e)throw new Error("Expected reducePropsToState to be a function.");if("function"!=typeof n)throw new Error("Expected handleStateChangeOnClient to be a function.");if(void 0!==t&&"function"!=typeof t)throw new Error("Expected mapStateOnServer to either be undefined or a function.");return function(o){if("function"!=typeof o)throw new Error("Expected WrappedComponent to be a React component.");var a,f=[];function d(){a=e(f.map((function(e){return e.props}))),s.canUseDOM?n(a):t&&(a=t(a))}var s=function(e){var n,t;function r(){return e.apply(this,arguments)||this}t=e,(n=r).prototype=Object.create(t.prototype),n.prototype.constructor=n,n.__proto__=t,r.peek=function(){return a},r.rewind=function(){if(r.canUseDOM)throw new Error("You may only call rewind() on the server. Call peek() to read the current state.");var e=a;return a=void 0,f=[],e};var p=r.prototype;return p.shouldComponentUpdate=function(e){return!c(e,this.props)},p.componentWillMount=function(){f.push(this),d()},p.componentDidUpdate=function(){d()},p.componentWillUnmount=function(){var e=f.indexOf(this);f.splice(e,1),d()},p.render=function(){return i.createElement(o,this.props)},r}(r.Component);return p(s,"displayName","SideEffect("+function(e){return e.displayName||e.name||"Component"}(o)+")"),p(s,"canUseDOM",u),s}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,